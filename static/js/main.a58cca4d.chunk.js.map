{"version":3,"sources":["components/SearchBar.js","components/ButtonCart.js","components/AddToCart.js","components/ItemCard.js","services/api.js","components/Loading.js","components/ItemList.js","components/CategorieList.js","pages/HomePage.js","components/ShopingCartItem.js","components/ButtonShop.js","components/ShoppingCart.js","pages/Cart.js","components/AddToCartFromDetails.js","components/ProductDetails.js","pages/SubmitPage.js","App.js","serviceWorker.js","index.js"],"names":["SearchBar","handleChangle","bind","state","value","event","this","setState","target","change","props","className","htmlFor","type","id","onChange","onClick","React","Component","ButtonCart","to","AddToCart","addItem","productObj","storage","JSON","parse","localStorage","getItem","newStorage","setItem","stringify","ItemCard","item","category","category_id","title","thumbnail","price","style","width","src","alt","a","fetch","response","json","getProductsFromCategoryAndQuery","categoryId","query","Loading","ItemList","itens","handleFirstChangeInput","handleFutureInputs","prevProps","input","input2","undefined","length","results","map","CategorieList","categorias","api","then","i","name","HomePage","stateSearch","querySearch","categorieState","categorieSearch","ShopingCartItem","toFixed","ButtonShop","ShoppingCart","carrinho","Cart","addStorage","AddToCartFromDetails","ProductDetails","getProduct","product","loading","match","params","productId","find","attributes","att","value_name","SubmitPage","reduce","acc","curr","App","exact","path","component","render","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a58cca4d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass SearchBar extends React.Component {\n  constructor() {\n    super();\n    this.handleChangle = this.handleChangle.bind(this);\n    this.state = {\n      value: '',\n    };\n  }\n\n  handleChangle(event) {\n    this.setState({\n      value: event.target.value,\n    });\n  }\n\n  render() {\n    const { change } = this.props;\n    const { value } = this.state;\n    return (\n      <div className=\"search-bar\">\n        <label data-testid=\"home-initial-message\" htmlFor=\"exampleInputEmail1\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"exampleInputEmail1\"\n            onChange={ this.handleChangle }\n            data-testid=\"query-input\"\n          />\n          Digite algum termo de pesquisa ou escolha uma categoria.\n        </label>\n        <button\n          className=\"btn btn-outline-dark\"\n          data-testid=\"query-button\"\n          onClick={ () => change(value) }\n          type=\"button\"\n        >\n          Pesquisar\n        </button>\n      </div>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  change: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass ButtonCart extends Component {\n  render() {\n    return (\n      <Link className=\"link\" to=\"/Cart\" data-testid=\"shopping-cart-button\">Carrinho</Link>\n    );\n  }\n}\n\nexport default ButtonCart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddToCart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addItem = this.addItem.bind(this);\n  }\n\n  addItem() {\n    const { productObj } = this.props;\n    const storage = JSON.parse(localStorage.getItem('itens')) || [];\n    const newStorage = [...storage, productObj];\n    localStorage.setItem('itens', JSON.stringify(newStorage));\n  }\n\n  render() {\n    return (\n      <button\n        className=\"btn btn-outline-primary\"\n        type=\"button\"\n        data-testid=\"product-add-to-cart\"\n        onClick={ this.addItem }\n      >\n        Adicione item ao carrinho\n      </button>\n    );\n  }\n}\n\nAddToCart.propTypes = {\n  productObj: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    category_id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    thumbnail: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default AddToCart;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport AddToCart from './AddToCart';\n\nclass ItemCard extends React.Component {\n  render() {\n    const { item } = this.props;\n    const { id,\n      category_id: category,\n      title,\n      thumbnail,\n      price } = item;\n    return (\n      <div data-testid=\"product\" className=\"card\" style={ { width: '20rem' } }>\n        <img src={ thumbnail } alt={ title } className=\"card-img-top\" />\n        <div className=\"card-body\">\n          <h4 className=\"card-title\">{title}</h4>\n          <p className=\"card-text\">\n            R$\n            {' '}\n            {price}\n          </p>\n          <Link\n            className=\"link\"\n            data-testid=\"product-detail-link\"\n            to={ `/item/${category}/${id}` }\n          >\n            Mais Detalhes\n          </Link>\n          <AddToCart productObj={ item } />\n        </div>\n      </div>\n    );\n  }\n}\n\nItemCard.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    category_id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    thumbnail: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default ItemCard;\n","export async function getCategories() {\n  const response = await fetch('https://api.mercadolibre.com/sites/MLB/categories');\n  const item = await response.json();\n  return item;\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  if (!categoryId) {\n    const response = await fetch(`https://api.mercadolibre.com/sites/MLB/search?q=${query}`);\n    const item = await response.json();\n    return item;\n  }\n  if (!query) {\n    const response = await fetch(`https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}`);\n    const item = await response.json();\n    return item;\n  }\n  const response = await fetch(`https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}_ID&q=${query}`);\n  const item = await response.json();\n  return item;\n}\n","import React, { Component } from 'react';\n\nclass Loading extends Component {\n  render() {\n    return (\n      <div>Carregando...</div>\n    );\n  }\n}\n\nexport default Loading;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ItemCard from './ItemCard';\nimport { getProductsFromCategoryAndQuery } from '../services/api';\nimport Loading from './Loading';\n\nclass ItemList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      itens: [],\n    };\n    this.handleFirstChangeInput = this.handleFirstChangeInput.bind(this);\n    this.handleFutureInputs = this.handleFutureInputs.bind(this);\n  }\n\n  componentDidMount() {\n    this.handleFirstChangeInput();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { input, input2 } = this.props;\n    if (input !== prevProps.input) {\n      this.handleFutureInputs(input);\n    }\n    if (input2 !== prevProps.input2) {\n      this.handleFutureInputs(input);\n    }\n  }\n\n  async handleFutureInputs(input) {\n    const { input2 } = this.props;\n    const item = await getProductsFromCategoryAndQuery(input2, input);\n    this.setState(() => ({ itens: item }));\n  }\n\n  async handleFirstChangeInput() {\n    const { input, input2 } = this.props;\n    const item = await getProductsFromCategoryAndQuery(input2, input);\n    this.setState(() => ({ itens: item }));\n  }\n\n  render() {\n    const { itens } = this.state;\n    if (itens === undefined) return <Loading />;\n    if ((itens.length === 0)) {\n      return <p>Nenhum produto foi encontrado</p>;\n    }\n    return (\n      <div className=\"card-list\">\n        {itens.results.map((item) => (\n          <ItemCard item={ item } key={ item.id } />\n        ))}\n      </div>\n    );\n  }\n}\n\nItemList.propTypes = {\n  input: PropTypes.string.isRequired,\n  input2: PropTypes.string.isRequired,\n};\n\nexport default ItemList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as api from '../services/api';\n\nclass CategorieList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      categorias: [],\n    };\n  }\n\n  componentDidMount() {\n    api.getCategories()\n      .then((item) => this.setState({ categorias: item }));\n  }\n\n  render() {\n    const { categorias } = this.state;\n    const { onClick } = this.props;\n    return (\n      <div\n        className=\"input-group\"\n        style={ { width: '280px' } }\n      >\n        <div className=\"category-list\">\n          <h4 className=\"h4-title\">Categorias</h4>\n          {categorias.map((i) => (\n            <label\n              className=\"list-unstyled ps-0\"\n              key={ i.name }\n              data-testid=\"category\"\n              htmlFor={ i.id }\n            >\n              <input\n                className=\"form-check-input mt-0\"\n                id={ i.id }\n                key={ i.name }\n                onClick={ () => onClick(i.id) }\n                type=\"radio\"\n                name=\"t\"\n              />\n              {i.name}\n            </label>\n          ))}\n\n        </div>\n      </div>\n    );\n  }\n}\n\nCategorieList.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default CategorieList;\n","import React, { Component } from 'react';\nimport SearchBar from '../components/SearchBar';\nimport ButtonCart from '../components/ButtonCart';\nimport ItemList from '../components/ItemList';\nimport CategorieList from '../components/CategorieList';\n\nclass HomePage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      querySearch: '',\n      categorieSearch: '',\n    };\n  }\n\n  stateSearch = (value) => {\n    this.setState({ querySearch: value });\n  }\n\n  categorieState = (value) => {\n    this.setState({ categorieSearch: value });\n  }\n\n  render() {\n    const { querySearch, categorieSearch } = this.state;\n    return (\n      <div className=\"home-page\">\n        <SearchBar change={ this.stateSearch } />\n        <ButtonCart />\n        <div className=\"welcome-page\">\n          <CategorieList onClick={ this.categorieState } />\n          {(querySearch === '' && categorieSearch === '')\n            ? <p className=\"text\">Nenhum produto foi encontrado</p>\n            : <ItemList input={ querySearch } input2={ categorieSearch } />}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass ShopingCartItem extends React.Component {\n  render() {\n    const { item } = this.props;\n    const { id,\n      category_id: category,\n      title,\n      thumbnail,\n      price } = item;\n    return (\n      <div className=\"cart-item\">\n        <div data-testid=\"product\" className=\"card\" style={ { width: '20rem' } }>\n          <img src={ thumbnail } alt={ title } className=\"card-img-top\" />\n          <div\n            className=\"card-body\"\n          >\n            <h4\n              className=\"card-title\"\n              data-testid=\"shopping-cart-product-name\"\n            >\n              {title}\n            </h4>\n            <p className=\"card-text\">\n              $\n              {' '}\n              {price.toFixed(2)}\n            </p>\n            <p data-testid=\"shopping-cart-product-quantity\">1</p>\n            <Link\n              className=\"link\"\n              data-testid=\"product-detail-link\"\n              to={ `/item/${category}/${id}` }\n            >\n              Mais Detalhes\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nShopingCartItem.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    category_id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    thumbnail: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default ShopingCartItem;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass ButtonShop extends Component {\n  render() {\n    return (\n      <div>\n        <Link\n          className=\"link\"\n          data-testid=\"checkout-products\"\n          to=\"/submit-page\"\n        >\n          Finalizar Compra\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default ButtonShop;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ShoppingCartItem from './ShopingCartItem';\nimport ButtonShop from './ButtonShop';\n\nclass ShoppingCart extends Component {\n  render() {\n    const { carrinho } = this.props;\n    return (\n      <div className=\"cart-page\">\n        <ButtonShop />\n        <div className=\"cart-items\">\n          { carrinho.map((item) => (\n            <ShoppingCartItem\n              key={ item.id }\n              item={ item }\n            />)) }\n        </div>\n      </div>\n    );\n  }\n}\n\nShoppingCart.propTypes = {\n  carrinho: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default ShoppingCart;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ShoppingCart from '../components/ShoppingCart';\n\nclass Cart extends Component {\n  constructor() {\n    super();\n    this.state = {\n      carrinho: [],\n    };\n    this.addStorage = this.addStorage.bind(this);\n  }\n\n  componentDidMount() {\n    this.addStorage();\n  }\n\n  addStorage() {\n    const storage = JSON.parse(localStorage.getItem('itens'));\n    if (storage) {\n      this.setState({\n        carrinho: storage,\n      });\n    }\n  }\n\n  render() {\n    const { carrinho } = this.state;\n    if (carrinho.length === 0) {\n      return (\n        <div className=\"cart\">\n          <Link\n            className=\"link\"\n            to=\"/Project-FrontEnd\"\n          >\n            Página Principal\n          </Link>\n          <div data-testid=\"shopping-cart-empty-message\">Seu carrinho está vazio</div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"cart\">\n        <Link\n          className=\"link\"\n          to=\"/\"\n        >\n          Página Principal\n        </Link>\n        {(carrinho && <ShoppingCart carrinho={ carrinho } />)}\n      </div>\n    );\n  }\n}\n\nexport default Cart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddToCartFromDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addItem = this.addItem.bind(this);\n  }\n\n  addItem() {\n    const { productObj } = this.props;\n    const storage = JSON.parse(localStorage.getItem('itens')) || [];\n    const newStorage = [...storage, productObj];\n    localStorage.setItem('itens', JSON.stringify(newStorage));\n  }\n\n  render() {\n    return (\n      <button\n        className=\"btn btn-outline-primary\"\n        type=\"button\"\n        data-testid=\"product-detail-add-to-cart\"\n        onClick={ this.addItem }\n      >\n        Adicione item ao carrinho\n      </button>\n    );\n  }\n}\n\nAddToCartFromDetails.propTypes = {\n  productObj: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    category_id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    thumbnail: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default AddToCartFromDetails;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as api from '../services/api';\nimport AddToCartFromDetails from './AddToCartFromDetails';\n\nclass ProductDetails extends React.Component {\n  constructor() {\n    super();\n    this.getProduct = this.getProduct.bind(this);\n    this.state = {\n      product: {},\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    this.getProduct();\n  }\n\n  async getProduct() {\n    const { match: { params: { productId, categoryId } } } = this.props;\n    const { results } = await api.getProductsFromCategoryAndQuery(categoryId, '');\n    const product = await results.find((item) => item.id === productId);\n    this.setState({ product: { ...product }, loading: false });\n  }\n\n  render() {\n    const { product, loading } = this.state;\n    const { title, price, thumbnail, attributes } = product;\n\n    if (loading) return <p>Carregando...</p>;\n    return (\n      <div className=\"details-page\">\n        <Link className=\"link\" to=\"/Project-FrontEnd\">Voltar Para Pagina Principal</Link>\n        <Link\n          className=\"link\"\n          data-testid=\"shopping-cart-button\"\n          to=\"/Cart\"\n        >\n          Ir para Carrinho\n        </Link>\n        <h3 data-testid=\"product-detail-name\">{ title }</h3>\n        <p>\n          {`Price $ ${price}`}\n        </p>\n        <div className=\"details\" style={ { width: '20rem' } }>\n          <img src={ thumbnail } alt={ title } />\n          <h3 className=\"h3-title\">Especificações técnicas do produto</h3>\n          <div className=\"list-group\">\n            <ul>\n              { attributes.map((att) => (\n                <li\n                  className=\"list-group-item\"\n                  key={ att.id }\n                >\n                  { `${att.name} : ${att.value_name} ` }\n                </li>\n              )) }\n            </ul>\n          </div>\n        </div>\n        <AddToCartFromDetails productObj={ product } />\n      </div>\n    );\n  }\n}\n\nProductDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      productId: PropTypes.string,\n      categoryId: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default ProductDetails;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass SubmitPage extends Component {\n  constructor() {\n    super();\n    this.addStorage = this.addStorage.bind(this);\n    this.state = {\n      carrinho: [],\n    };\n  }\n\n  componentDidMount() {\n    this.addStorage();\n  }\n\n  addStorage() {\n    const storage = JSON.parse(localStorage.getItem('itens'));\n    if (storage) {\n      this.setState({\n        carrinho: storage,\n      });\n    }\n  }\n\n  render() {\n    const { carrinho } = this.state;\n    if (!carrinho.length) {\n      return <span>Seu carrinho está vazio</span>;\n    }\n    return (\n      <div>\n        <section>\n          <form>\n            <label htmlFor=\"name\">\n              Nome Completo\n              <input id=\"name\" type=\"text\" data-testid=\"checkout-fullname\" />\n            </label>\n            <label htmlFor=\"email\">\n              Email\n              <input id=\"email\" type=\"email\" data-testid=\"checkout-email\" />\n            </label>\n            <label htmlFor=\"cpf\">\n              CPF\n              <input id=\"cpf\" type=\"text\" data-testid=\"checkout-cpf\" />\n            </label>\n            <label htmlFor=\"phone\">\n              Telefone\n              <input id=\"phone\" type=\"text\" data-testid=\"checkout-phone\" />\n            </label>\n            <label htmlFor=\"cep\">\n              CEP\n              <input id=\"cep\" type=\"text\" data-testid=\"checkout-cep\" />\n            </label>\n            <label htmlFor=\"address\">\n              Endereço\n              <input id=\"address\" type=\"text\" data-testid=\"checkout-address\" />\n            </label>\n          </form>\n        </section>\n        <section>\n          <ul>\n            { carrinho.map((item) => <li key={ item.id }>{ item.title }</li>) }\n          </ul>\n          { `R$: ${carrinho.reduce((acc, curr) => (acc + curr.price), 0)}` }\n        </section>\n        <Link className=\"link\" to=\"/Project-FrontEnd\">Página Principal</Link>\n      </div>\n    );\n  }\n}\n\nexport default SubmitPage;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport Cart from './pages/Cart';\nimport ProductDetails from './components/ProductDetails';\nimport SubmitPage from './pages/SubmitPage';\nimport './App.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/Project-FrontEnd\" component={ HomePage } />\n          <Route path=\"/Cart\" component={ Cart } />\n          <Route\n            path=\"/item/:categoryId/:productId\"\n            render={ (props) => (<ProductDetails { ...props } />) }\n          />\n          <Route path=\"/submit-page\" component={ SubmitPage } />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}